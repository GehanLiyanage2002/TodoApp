name: CI/CD - Todo App

on:
  push:
    branches:
      - main

env:
  ACR_NAME: todoappacrs
  AKS_RG: TodoAppRG
  AKS_NAME: TodoAppAKS
  BACKEND_IMAGE: todo-backend
  FRONTEND_IMAGE: todo-frontend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIAL }}

      - name: Get ACR credentials
        id: acr-creds
        run: |
          ACR_USERNAME=$(az acr credential show -n $ACR_NAME --query "username" -o tsv)
          ACR_PASSWORD=$(az acr credential show -n $ACR_NAME --query "passwords[0].value" -o tsv)
          echo "ACR_USERNAME=$ACR_USERNAME" >> $GITHUB_ENV
          echo "ACR_PASSWORD=$ACR_PASSWORD" >> $GITHUB_ENV

      - name: Log in to ACR
        uses: docker/login-action@v2
        with:
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}
          registry: ${{ env.ACR_NAME }}.azurecr.io

      - name: Build & Push Backend
        run: |
          docker build -t $ACR_NAME.azurecr.io/$BACKEND_IMAGE:${{ github.sha }} ./todo-backend
          docker push $ACR_NAME.azurecr.io/$BACKEND_IMAGE:${{ github.sha }}
          docker tag $ACR_NAME.azurecr.io/$BACKEND_IMAGE:${{ github.sha }} $ACR_NAME.azurecr.io/$BACKEND_IMAGE:latest
          docker push $ACR_NAME.azurecr.io/$BACKEND_IMAGE:latest

      - name: Build & Push Frontend
        run: |
          docker build \
            --build-arg REACT_APP_API_URL=http://nginx:backend/api \
            -t $ACR_NAME.azurecr.io/$FRONTEND_IMAGE:${{ github.sha }} .
          docker push $ACR_NAME.azurecr.io/$FRONTEND_IMAGE:${{ github.sha }}
          docker tag $ACR_NAME.azurecr.io/$FRONTEND_IMAGE:${{ github.sha }} $ACR_NAME.azurecr.io/$FRONTEND_IMAGE:latest
          docker push $ACR_NAME.azurecr.io/$FRONTEND_IMAGE:latest

      - name: Get AKS Credentials
        run: |
          az aks get-credentials --resource-group $AKS_RG --name $AKS_NAME --overwrite-existing

      - name: Deploy to AKS
        run: |
          kubectl apply -f k8/
          kubectl set image deployment/backend backend=$ACR_NAME.azurecr.io/$BACKEND_IMAGE:${{ github.sha }}
          kubectl set image deployment/frontend frontend=$ACR_NAME.azurecr.io/$FRONTEND_IMAGE:${{ github.sha }}
          kubectl rollout restart deployment/frontend
          kubectl rollout restart deployment/backend
